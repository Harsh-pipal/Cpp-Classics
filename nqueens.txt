#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
bool safe(int **arr,int x,int y,int n){
	for (int i=0;i<x;i++){
		if (arr[i][y]==1){
			return false;
		}
	}
	int row=x;
	int col=y;
	while(row>=0 && col>=0){
		if (arr[row][col]==1){
			return false;
		}
		row--;
		col--;
	}
	row=x;
	col=y;
	while(row>=0 && col<n){
		if (arr[row][col]==1){
			return false;
		}
		row--;
		col++;
	}
	return true;
}

bool queen(int **arr,int x,int n){
	if (x>=n){
		return true;
	}
	for (int i = 0; i < n; i++)
	{
		if (safe(arr,x,i,n)){
			arr[x][i]=1;
			if (queen(arr,x+1,n)){
				return true;
			}
			arr[x][i]=0;

		}
	}
	return false;
}

	

void solve(){
	int n;
	cin>>n;
	int **arr=new int* [n];
	for (int i = 0; i <n; i++)
	{
		arr[i]=new int[n];
	}
	for (int i = 0; i < n;i++)
	{
		for (int j = 0;j<n; j++)
		{
			arr[i][j]=0;
		}
	}

	if(queen(arr,0,n)){
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j <n; j++)
			{
				cout<<arr[i][j]<<" ";
			}
			cout<<endl;
		}
	}

}
int main(){
	int t;
	cin>>t;
	while(t--){
		solve();
	}

}
